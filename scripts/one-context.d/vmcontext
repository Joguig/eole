#!/bin/bash
#
# chkconfig: 2345 9 99
# description:  network reconfigure
#
# -------------------------------------------------------------------------- #
# Copyright 2010-2014, C12G Labs S.L.                                        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

### BEGIN INIT INFO
# Provides:          vmcontext
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:
# Should-Start:      $network
# Should-Stop:       $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: OpenNebula contextualization script
### END INIT INFO

. /lib/lsb/init-functions

function export_rc_vars
{
    if [ -f $1 ] ; then
        ONE_VARS=`cat $1 | egrep -e '^[a-zA-Z\-\_0-9]*=' | sed 's/=.*$//'`

        . $1

        for v in $ONE_VARS; do
            export $v
        done
    fi
}

function execute_scripts {
    SCRIPTS_DIR="/etc/one-context.d"
    for script in $SCRIPTS_DIR/*; do
        $script
    done
}

case "$1" in
"start")
    CONTEXT_DEV=`blkid -l -t LABEL="CONTEXT" -o device`
    if [ -e "$CONTEXT_DEV" ]; then
        mount -t iso9660 -L CONTEXT -o ro /mnt
        if [ -f /mnt/context.sh ]; then
            export_rc_vars /mnt/context.sh
        fi

        execute_scripts

        umount /mnt
    else
        if type vmtoolsd ; then
            vmtoolsd --cmd 'info-get guestinfo.opennebula.context' | openssl base64 -d > /tmp/context.sh
            export_rc_vars /tmp/context.sh
        fi

        execute_scripts
    fi
    ;;

esac

